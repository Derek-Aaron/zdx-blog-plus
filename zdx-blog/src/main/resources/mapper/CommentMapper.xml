<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zdx.mapper.zdx.CommentMapper">

    <resultMap id="BaseResultMap" type="com.zdx.entity.zdx.Comment">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="commentType" column="comment_type" jdbcType="VARCHAR"/>
            <result property="typeId" column="type_id" jdbcType="BIGINT"/>
            <result property="parentId" column="parent_id" jdbcType="BIGINT"/>
            <result property="replyId" column="reply_id" jdbcType="BIGINT"/>
            <result property="content" column="content" jdbcType="VARCHAR"/>
            <result property="fromUid" column="from_uid" jdbcType="BIGINT"/>
            <result property="likeCount" column="like_count" jdbcType="BIGINT"/>
            <result property="toUid" column="to_uid" jdbcType="BIGINT"/>
            <result property="isCheck" column="is_check" jdbcType="BIT"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,comment_type,type_id,like_count
        parent_id,reply_id,content,
        from_uid,to_uid,is_check,
        create_time,update_time
    </sql>
    <select id="selectRecentComment" resultType="com.zdx.model.vo.front.RecentCommentVo">
        select
            c.id,u.nickname,u.avatar,c.content,c.create_time
        from zdx_comment c
                 inner join us_user u on u.id = c.from_uid
        where c.is_check = 1
        order by c.create_time desc limit 5
    </select>
    <select id="selectReplyByParentIdList" resultType="com.zdx.model.vo.front.ReplyVo">
        SELECT *
        FROM (
        SELECT c.from_uid,
        u.nickname AS from_nickname,
        u.avatar,
        c.to_uid,
        c.like_count,
        r.nickname AS to_nickname,
        c.id,
        c.parent_id,
        c.content,
        c.create_time,
        ROW_NUMBER() over (PARTITION BY parent_id ORDER BY create_time ASC ) row_num
        FROM zdx_comment c
        JOIN us_user u ON c.from_uid = u.id
        JOIN us_user r ON c.to_uid = r.id
        WHERE c.is_check = 1
        AND parent_id IN
        <foreach collection="commentIds" open="(" close=")" item="commentId" separator=",">
            #{commentId}
        </foreach>
        ) t
        WHERE 4 > row_num
    </select>
    <select id="selectReplyCountByParentId" resultType="com.zdx.model.vo.front.ReplyCountVO">
        SELECT parent_id as comment_id,
        count(1) AS reply_count
        FROM zdx_comment
        WHERE is_check = 1
        AND parent_id IN
        <foreach collection="commentIds" open="(" close=")" item="commentId" separator=",">
            #{commentId}
        </foreach>
        GROUP BY parent_id
    </select>
</mapper>
